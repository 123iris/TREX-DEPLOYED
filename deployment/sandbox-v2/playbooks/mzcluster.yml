# MZ cluster
- import_playbook: cluster.yml
  vars:
    cluster: mzcluster
    master: mzmaster.sb
    workers: mzworkers

# Apply any taints
- hosts: console
  kube_config: '{{clusters.mz.kube_config}}' 
  tasks:
    # Enable taint 
    - name: Postgre taint    
      shell: 'kubectl --kubeconfig {{kube_config}} taint nodes {{postgres.node_affinity.node}} {{ postgres.node_affinity.taint.key}}={{postgres.node_affinity.taint.value}}:NoSchedule'         
      when: postgres.node_affinity.enabled == true
    
    # Or disable taint
    - name: Postgre taint    
      shell: 'kubectl --kubeconfig {{kube_config}} taint nodes {{postgres.node_affinity.node}} {{ postgres.node_affinity.taint.key}}:NoSchedule-'         
      when: postgres.node_affinity.enabled != true

# Ingress nginx controller
- hosts: console
  vars:
    kube_config: '{{clusters.mz.kube_config}}'
    install_name: 'ingress-nginx'
    helm_chart: '{{charts_root}}/ingress-nginx'
    is_template: true
    helm_namespace: '{{clusters.mz.ingress.namespace}}'
    helm_values: '{{charts_root}}/ingress-nginx/values.template.j2'
    ingress_ports: '{{clusters.mz.ingress.nodeports}}'
  roles:
    - {role:  helm, tags: [mz-ingress]}

# Kubenetes dashboard
- hosts: console
  vars:
    kube_config: '{{clusters.mz.kube_config}}' 
    cluster_name: 'mz'
    dashboard_conf: '{{clusters.mz.dashboard}}'
  roles:
    - {role: k8scluster/dashboard}

