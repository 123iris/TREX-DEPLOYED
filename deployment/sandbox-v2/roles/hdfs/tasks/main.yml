
# Deploy helm 
#
- name: Get yml from template 
  template:
     src: helm_hdfs_values.yml.j2
     dest: '{{tmp_dir}}/helm_hdfs_values.yml'

- name: Get yml from template dn
  template:
     src: pv_hdfs_dn.yml.j2
     dest: '{{tmp_dir}}/pv_hdfs_dn.yml'

- name: Deploy persistent volume for hdfs dn
  k8s:
    state: present
    src: '{{tmp_dir}}/pv_hdfs_dn.yml'
    kubeconfig: '{{kube_config}}'
    wait: yes
    wait_timeout: '{{docker_wait_time}}'


- name: Get yml from template nn
  template:
     src: pv_hdfs_nn.yml.j2
     dest: '{{tmp_dir}}/pv_hdfs_nn.yml'

- name: Deploy persistent volume for hdfs dn
  k8s:
    state: present
    src: '{{tmp_dir}}/pv_hdfs_nn.yml'
    kubeconfig: '{{kube_config}}'
    wait: yes
    wait_timeout: '{{docker_wait_time}}'

- name: Check if hdfs already running
  command: 'helm --kubeconfig {{kube_config}} list -f {{hdfs_name}}'
  register: out

- name: Add helm repo
  command: 'helm repo add stable https://kubernetes-charts.storage.googleapis.com/'

- name: Deploy hdfs through helm
  command: 'helm --kubeconfig {{kube_config}} install {{hdfs_name }} stable/hadoop --values {{tmp_dir}}/helm_hdfs_values.yml' 
  register: out
  when: hdfs_name not in out.stdout

- set_fact:
    hdfs_pod_id: '{{hdfs_name}}-hadoop-hdfs-nn-0' # Second part hardcoded in Helm  

- name: Wait for HDFS to come out of safe mode
  command: 'kubectl --kubeconfig {{kube_config}} exec -it {{hdfs_pod_id}} -- /bin/bash -c "/usr/local/hadoop/bin/hdfs dfsadmin -safemode get"'
  register: out 
  retries: 10 
  delay: 30
  until: "'Safe mode is OFF' in out.stdout"

- include_tasks:
    file: create_user.yml  
  vars:
    hdfs_user: '{{item}}'
    hdfs_user_dir: '{{hdfs_user_base_dir}}/{{item}}'
  with_items: '{{hdfs_users}}'
 
